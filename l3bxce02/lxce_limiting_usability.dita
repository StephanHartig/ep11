<?xml version="1.0" encoding="UTF-8"?>
<!--Arbortext, Inc., 1988-2011, v.4002-->
<!DOCTYPE reference PUBLIC "-//IBM//DTD DITA IBM Reference//EN"
 "ibm-reference.dtd">
<?Pub Sty _display FontColor="red"?>
<?Pub Inc?>
<reference id="l31xce00_limiting_usability" xml:lang="en-us" rev="i1v2">
<title>Controlling access to   cryptographic objects</title>
<titlealts>
<navtitle>Controlling access to crypto objects</navtitle>
<searchtitle><keyword conref="lxce_conref.dita#l31xce00_conref/ep11feat"/>: Controlling access to
cryptographic objects</searchtitle>
</titlealts>
<!--SH: Acrolinx run on ...-->
<shortdesc>You can decide to activate one or two session modes to limit the access to cryptographic
objects in order to improve security. The available session modes are the <term>strict session
mode</term> or the <term>virtual HSM (VHSM) mode</term>. Both of these modes generate an <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/>. An <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> is a state on the <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coproc"/> and must not be confused with a <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session.</shortdesc>
<prolog>
<metadata>
<keywords>
<indexterm>usability of objects<indexterm>limiting</indexterm></indexterm>
<indexterm>objects usability<indexterm>limiting</indexterm></indexterm>
<indexterm>limiting<indexterm>usability of objects</indexterm></indexterm>
<indexterm><keyword conref="lxce_conref.dita#l31xce00_conref/ep11session"/></indexterm>
</keywords>
</metadata>
</prolog>
<refbody>
<section>
<p>You must configure the <keyword conref="lxce_conref.dita#l31xce00_conref/ep11token"/> to use
either one of the available modes, or both.</p>
<ul>
<li>
<p>Protecting cryptographic objects with the <term>strict session mode</term>:</p>
<p>This mode prohibits that a session key, copied from a <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session that generated this key, is still valid
even if the generating session has ended. Also, when this mode is used, session keys generated with
this token can no longer be passed to other sessions of the same token.</p>
<p>To enable the <term>strict session mode</term>, specify keyword <codeph>STRICT_MODE</codeph> in
the <keyword conref="lxce_conref.dita#l31xce00_conref/ep11token"/> configuration file.</p>
</li>
<li>
<p>Protecting cryptographic objects with the <term>virtual HSM (VHSM) mode</term>:</p>
<p>This mode is applicable when the same <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coprocs"/> are used by multiple <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11tokens"/>. In such environments, a key generated by one
token might be used by another token which uses the same domain on multiple <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coprocs"/>. This is possible, because all keys are
wrapped by the same master key. This mode prohibits that a key, generated by one token, is used by
any other token (on the same system or on another system or <keyword
conref="lxce_conref.dita#l31xce00_conref/zvm"/> or KVM guest).</p>
<p>To enable the <term>virtual HSM (VHSM) mode</term>, specify keyword <codeph>VHSM_MODE</codeph> in
the configuration file. When this mode is used, session and token keys generated with this token can
no longer be passed to other tokens using domains on the same <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coprocs"/>.</p>
</li>
</ul>
<p>The number of simultaneously supported <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11sessions"/> is limited on an <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coproc"/>. Programs that use a large number of sessions
simultaneously should not use the <term>strict session mode</term> or the <term>virtual HSM
mode</term>, because otherwise the <keyword conref="lxce_conref.dita#l31xce00_conref/ep11coproc"/>
may run out of session resources.</p>
<p>Therefore, it is important to delete any finished <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/>, that is no longer required, in particular
when the program for which it was logged in, terminated unexpectedly. For the purpose of a required
session cleanup, you can use the <cmdname>pkcsep11_session</cmdname> utility. With this tool you can
delete <keyword conref="lxce_conref.dita#l31xce00_conref/ep11sessions"/> from the <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11coprocs"/> that are left over by programs that did not
terminate normally (see <xref href="lxce_ep11session.dita#lxce_ep11sesion"/>). </p>
<p> The <cmdname>pkcsep11_session</cmdname> tool also allows to display any currently stored
<keyword conref="lxce_conref.dita#l31xce00_conref/ep11sessions"/>, and can also log out of those
sessions. </p>
<note><term>Strict session mode</term> and <term>virtual HSM (VHSM) mode</term> only work for R/W or
R/O user sessions. For public sessions or security officer (SO) sessions, the <term>strict session
mode</term> and the <term>virtual HSM (VHSM) mode</term> are not used.</note>
</section>
<section><title>Strict session mode</title><indexterm>strict session
mode</indexterm><indexterm>session pin-blob</indexterm><indexterm>card-PIN</indexterm><p>To enable a
strict implementation of the <keyword conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session
semantics, a <term>strict session mode</term> is available on a per token instance basis. </p><p>In
<term>strict session mode</term>, for each new <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session, a unique <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> ID is generated. Then the <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> is logged in on all adapter/domain pairs
(adjunct processor queue numbers, APQNs) that are configured for the token. For each logged-in
session, the returned session pin-blob (derived from the <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> ID) is stored in a special token object in
the token directory. </p><p>During further processing, all session keys (that is, objects where
attribute CKA_TOKEN is CK_FALSE) are bound to the session pin-blob that was created when the session
was logged on. </p><p>At session end, the <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> with regards to the <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session is logged out on all APQNs belonging to
the token. The token object representing this <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> ID is deleted from the token
directory.</p><p>An APQN that comes online after an <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> has started, is also logged in internally if
a request to that APQN is encountered. </p><p>If multiple APQNs are available in the system, then
all pin-blobs returned by the <keyword conref="lxce_conref.dita#l31xce00_conref/ep11session"/> login
for the individual APQNs must be equal. Otherwise an error is returned and logged in the
SYSLOG.</p></section>
<section><title>Virtual HSM (VHSM) mode </title><indexterm>virtual HSM
mode</indexterm><indexterm>virtual HSM
mode<indexterm>VHSM</indexterm></indexterm><indexterm>VHSM</indexterm><indexterm>session
pin-blob</indexterm><indexterm>card-PIN</indexterm><p> To restrict keys to only that token that was
used to generate it, the <term>virtual HSM mode</term> (<term>VHSM mode</term>) is available on a
per-token basis.</p><p>Similar to the <term>strict session mode</term>, for each new <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session, a unique <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> ID is generated. However, an additional
card-PIN is required to log into an <keyword conref="lxce_conref.dita#l31xce00_conref/ep11session"/>
in <term>VHSM mode</term>. </p><p>The card-PIN used with <term>VHSM mode</term> must be set using
the command <cmdname>cardpin</cmdname> from the <cmdname>pkcsep11_session</cmdname> tool (see <xref
href="lxce_ep11session.dita#lxce_ep11sesion"/>). It takes a slot ID, the user PIN, and the card-PIN
as input. The card-PIN is stored in a special token object in the token directory. The card-PIN must
be between 8 and 16 characters in length.</p><p>That way, after setting the card-PIN, an <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> can log in on all configured APQNs. The
returned pin-blob derived from the card-PIN is stored in a special token object in the token
directory (separately from the token object for the card-PIN), the same way as for <term>strict
session mode</term>.</p><p>During further processing, all keys (session keys as well as token keys)
are bound to the pin-blob that was derived from the card-PIN when the session was logged
in.</p><p>At session end, the <keyword conref="lxce_conref.dita#l31xce00_conref/ep11session"/> with
regards to the <keyword conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session is logged out
from all APQNs and the token object representing this <keyword
conref="lxce_conref.dita#l31xce00_conref/ep11session"/> ID is deleted from the token directory. In
contrast to the session pin-blob, the card-PIN remains persistent and thus can be used for future
sessions in <term>VHSM mode</term>.</p><p>When the <term>VHSM mode</term> is enabled, but no
card-PIN has been set, then the <keyword conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session
login fails, and an appropriate message is logged to syslog.</p></section>
<section><title>Combined strict session mode and virtual HSM mode</title><indexterm>virtual HSM
mode, strict session mode<indexterm>combined</indexterm></indexterm>
<indexterm>virtual HSM mode, strict session mode<indexterm>combined</indexterm></indexterm>
<indexterm>VHSM mode, strict session mode<indexterm>combined</indexterm></indexterm>
<indexterm>strict session mode, virtual HSM mode<indexterm>combined</indexterm></indexterm>
<p>The <term>strict session mode</term> can be combined with the <term>VHSM mode</term>. This binds
all keys to the card-PIN, and additionally binds session keys (that is, objects where attribute
<codeph>CKA_TOKEN</codeph> is <codeph>FALSE</codeph>) to the <keyword
conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session.</p>
<table>
<tgroup cols="4">
<colspec colname="col1" colwidth="8*"/>
<colspec colname="col2" colwidth="6*"/>
<colspec colname="col3" colwidth="16*"/>
<colspec colname="col4" colwidth="18*"/>
<thead>
<row>
<entry>Strict session mode</entry>
<entry>VHSM mode</entry>
<entry>Session objects</entry>
<entry>Token objects</entry>
</row>
</thead>
<tbody>
<row>
<entry align="center">off</entry>
<entry align="center">off</entry>
<entry>not bound</entry>
<entry>not bound</entry>
</row>
<row>
<entry align="center">on</entry>
<entry align="center">off</entry>
<entry>bound to <keyword conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session</entry>
<entry>not bound</entry>
</row>
<row>
<entry align="center">off</entry>
<entry align="center">on</entry>
<entry>bound to token by card PIN</entry>
<entry>bound to token by card PIN</entry>
</row>
<row>
<entry align="center">on</entry>
<entry align="center">on</entry>
<entry>bound to <keyword conref="lxce_conref.dita#l31xce00_conref/pkcs11"/> session and token by
card PIN</entry>
<entry>bound to token by card PIN</entry>
</row>
</tbody>
</tgroup>
</table>
</section>
</refbody>
</reference>
<?Pub *0000001279?>
